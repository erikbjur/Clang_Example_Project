{
	"version": "2.0.0",
	"tasks": [
		{
			// This task compiles and links, aka "Builds" our app in one shot
			"type": "cppbuild",
			"label": "Windows - Build App Using Clang",
			"command": "C:/Program Files/LLVM/bin/clang++.exe",
			"args": [
				//"-fcolor-diagnostics",	//controls whether or not Clang prints diagnostics in color
				//"-fansi-escape-codes",	//Controls whether ANSI escape codes are used instead of the Windows Console API to output colored diagnostics
				"-g",					//This make a debug build
				"${workspaceFolder}\\*.cpp",	//This means compile all files ending in ".cpp"
				"-o",					//This indicates that the next line is our output file
				"${workspaceFolder}\\build\\myapp.exe"	//This is the output file
			],
			"options": {
				"cwd": "${workspaceFolder}"	//This is where the command is started
			},
			"problemMatcher": [
				"$gcc"						//This won't work for clang
			],
			"group": "build",				//This groups the tasks into the "Build" group
			"detail": "This task builds and links our program in one shot."
		},




		// This task compile our files and that's it.
		// We will end up with a bunch of .o files (object files) in the temp directory
		{
			"type": "cppbuild",
			"label": "Windows - Compile all .cpp files",
			"command": "C:/Program Files/LLVM/bin/clang++.exe",
			"args": [
				//"-fcolor-diagnostics",
				//"-fansi-escape-codes",
				"-g",
				"-c",
				"${workspaceFolder}\\*.cpp",
			],
			"options": {
				// This is where the .o files will go
				"cwd": "${workspaceFolder}\\build\\temp\\"
			},
			"problemMatcher": [
				"$gcc"
			],
			"group": "build",
			"detail": "This task only compiles our .cpp files\""
		},




		{
			"type": "cppbuild",
			"label": "Windows - Link all .o files into .exe",
			"command": "C:/Program Files/LLVM/bin/clang++.exe",
			"args": [
				//"-fcolor-diagnostics",
				//"-fansi-escape-codes",
				"${workspaceFolder}\\build\\temp\\*.o",	//here's the object files we will link
				"-g",	//debug version
				"-o",	//output directory comes next
				"${workspaceFolder}\\build\\myapp.exe"	//here's the output file name
			],
			"options": {
				// This is where the .o files will go
				"cwd": "${workspaceFolder}"
			},
			"problemMatcher": [
				"$gcc"
			],
			"group": "build",
			"detail": "This task links all of our .o files into an executable\""
		},




		// This task deletes all the build files like .o and .exe
		{
            "type": "shell",
            "label": "Windows - Clean Build Files",
            "command": "del",
            "args": [
				"/Q",	//You are not prompted for delete confirmation
                "${workspaceFolder}\\build\\temp\\*.o",	//object files
				"${workspaceFolder}\\build\\*.exe",		//executable files
				"${workspaceFolder}\\build\\*.ilk",		//intermediary files created by the linker
				"${workspaceFolder}\\build\\*.pdb"		//debug files for if you use the debugger
            ]
        },




		{
			// This task compiles and links, aka "Builds" our app in one shot
			"type": "shell",
			"label": "MacOS - Build App Using Clang",
			"command": "clang++",
			"args": [
				//"-fcolor-diagnostics",	//controls whether or not Clang prints diagnostics in color
				//"-fansi-escape-codes",	//Controls whether ANSI escape codes are used instead of the Windows Console API to output colored diagnostics
				"-g",					//This make a debug build
				"${workspaceFolder}/*.cpp",	//This means compile all files ending in ".cpp"
				"-o",					//This indicates that the next line is our output file
				"${workspaceFolder}/build/myapp.exe"	//This is the output file
			],
			"options": {
				"cwd": "${workspaceFolder}"	//This is where the command is started
			},
			"problemMatcher": [
				{
					"owner": "cpp",
					"fileLocation": [
						"relative",
						"${workspaceRoot}"
					],
						"pattern": {
						"regexp": "^(.):(\\d+):(\\d+):\\s+(warning|error):\\s+(.)$",
						"file": 1,
						"line": 2,
						"column": 3,
						"severity": 4,
						"message": 5
					}
				}
			],
			"group": "build",				//This groups the tasks into the "Build" group
			"detail": "This task builds and links our program in one shot."
		},




		{
			"type": "shell",
			"label": "MacOS - Compile all .cpp files",
			"command": "clang++",
			"args": [
				//"-fcolor-diagnostics",
				//"-fansi-escape-codes",
				"-g",
				"-c",
				"${workspaceFolder}/*.cpp",
			],
			"options": {
				// This is where the .o files will go
				"cwd": "${workspaceFolder}/build/temp/"
			},
			"problemMatcher": [
				{
					"owner": "cpp",
					"fileLocation": [
						"relative",
						"${workspaceRoot}"
					],
						"pattern": {
						"regexp": "^(.):(\\d+):(\\d+):\\s+(warning|error):\\s+(.)$",
						"file": 1,
						"line": 2,
						"column": 3,
						"severity": 4,
						"message": 5
					}
				}
			],
			"group": "build",
			"detail": "This task only compiles our .cpp files\""
		},



		{
			"type": "shell",
			"label": "MacOS - Link all .o files into .exe",
			"command": "clang++",
			"args": [
				//"-fcolor-diagnostics",
				//"-fansi-escape-codes",
				"${workspaceFolder}/build/temp/*.o",	//here's the object files we will link
				"-g",	//debug version
				"-o",	//output directory comes next
				"${workspaceFolder}/build/myapp.exe"	//here's the output file name
			],
			"options": {
				// This is where the .o files will go
				"cwd": "${workspaceFolder}"
			},
			"problemMatcher": [
				{
					"owner": "cpp",
					"fileLocation": [
						"relative",
						"${workspaceRoot}"
					],
						"pattern": {
						"regexp": "^(.):(\\d+):(\\d+):\\s+(warning|error):\\s+(.)$",
						"file": 1,
						"line": 2,
						"column": 3,
						"severity": 4,
						"message": 5
					}
				}
			],
			"group": "build",
			"detail": "This task links all of our .o files into an executable\""
		},



		{
            "type": "shell",
            "label": "MacOS - Clean Build Files",
            "command": "rm",
            "args": [
                "${workspaceFolder}/build/temp/*.o",	//object files
				"${workspaceFolder}/build/*.exe"		//executable files
            ]
        }
	]
}